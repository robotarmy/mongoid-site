---
title: Callbacks
author: Durran Jordan
category: docs
---
.text
  Mongoid supports the following callbacks:
  %br

  %li <tt>before_create</tt>
  %li <tt>before_destroy</tt>
  %li <tt>before_save</tt>
  %li <tt>before_update</tt>
  %li <tt>before_validation</tt>
  %li <tt>after_create</tt>
  %li <tt>after_destroy</tt>
  %li <tt>after_save</tt>
  %li <tt>after_update</tt>
  %li <tt>after_validation</tt>

  %br

  %p
    Callbacks are available on any document, whether it is embedded within another document or not.
    Note that to be efficient, Mongoid only fires the callback of the document that the
    persistence action was executed on. This is that Mongoid aims to support large hierarchies
    and to handle optimized atomic updates callbacks can't be firing all over the document
    hierarchy.

  <tt>article.rb</tt>:
  %pre
    %code.language-ruby
      :preserve
        class Article
          include Mongoid::Document
          field :name
          field :body
          field :slug

          before_create :generate_slug

          protected
          def generate_slug
            self.slug = name.to_permalink
          end
        end

  %p
    Callbacks are coming from <tt>ActiveModel</tt>, so you can use the new syntax as well:

  <tt>article.rb</tt>:
  %pre
    %code.language-ruby
      :preserve
        class Article
          include Mongoid::Document
          field :name

          set_callback(:save, :before) do |document|
            document.generate_slug
          end

          protected
          def generate_slug
            self.slug = name.to_permalink
          end
        end
